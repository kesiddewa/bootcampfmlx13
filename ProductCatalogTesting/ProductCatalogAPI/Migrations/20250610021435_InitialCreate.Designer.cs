// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalogAPI.Data;

#nullable disable

namespace ProductCatalogAPI.Migrations
{
    [DbContext(typeof(ProductCatalogDbContext))]
    [Migration("20250610021435_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ProductCatalogAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Electronic devices and gadgets",
                            IsActive = true,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Books, magazines, and reading materials",
                            IsActive = true,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Apparel and fashion items",
                            IsActive = true,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Home improvement and gardening supplies",
                            IsActive = true,
                            Name = "Home & Garden"
                        });
                });

            modelBuilder.Entity("ProductCatalogAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsActive");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Latest smartphone with advanced features",
                            IsActive = true,
                            LastModifiedDate = new DateTime(2024, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Smartphone X1",
                            Price = 699.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "High-performance laptop for professionals",
                            IsActive = true,
                            LastModifiedDate = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Laptop Pro 15",
                            Price = 1299.99m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 1, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Learn the basics of programming",
                            IsActive = true,
                            LastModifiedDate = new DateTime(2024, 1, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Programming Fundamentals",
                            Price = 49.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Advanced web development techniques",
                            IsActive = true,
                            LastModifiedDate = new DateTime(2024, 1, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Web Development Mastery",
                            Price = 79.99m,
                            StockQuantity = 75
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Comfortable cotton t-shirt",
                            IsActive = true,
                            LastModifiedDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cotton T-Shirt",
                            Price = 19.99m,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Complete set of gardening tools",
                            IsActive = true,
                            LastModifiedDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Garden Tools Set",
                            Price = 89.99m,
                            StockQuantity = 30
                        });
                });

            modelBuilder.Entity("ProductCatalogAPI.Models.Product", b =>
                {
                    b.HasOne("ProductCatalogAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductCatalogAPI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
